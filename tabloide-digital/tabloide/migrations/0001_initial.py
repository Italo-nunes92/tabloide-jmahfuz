# Generated by Django 4.2.19 on 2025-04-03 13:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, default=None, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
                ('is_published', models.BooleanField(default=True, help_text='Esse campo deve ser marcado para tornar a página publica')),
                ('content', models.TextField()),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('Código', models.IntegerField(default=None, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('combo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Combo')),
                ('name', models.CharField(max_length=50, verbose_name='Produto')),
                ('slug', models.SlugField(default=None, unique=True)),
                ('excerpt', models.CharField(max_length=150, verbose_name='Descrição curta')),
                ('cover', models.URLField(blank=True, default='', max_length=255, null=True)),
                ('vitrine_link', models.URLField(blank=True, default='', max_length=255, null=True)),
                ('is_published', models.BooleanField(default=False, help_text='Esse campo deve ser marcado para tornar o post publico', verbose_name='Ativo')),
                ('old_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Preço de:')),
                ('new_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Preço por:')),
                ('auto_new_price', models.BooleanField(default=True, help_text='Calcula o preço de acordo com o preço antigo', verbose_name='Preço automático')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text_link', models.CharField(blank=True, default='', editable=False, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tabloide.category', verbose_name='Categoria')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome da Promoção')),
                ('slug', models.SlugField(blank=True, default=None, null=True, unique=True)),
                ('description', models.TextField(max_length=255, verbose_name='Descrição da Promoção')),
                ('img_h', models.ImageField(upload_to='promotions/h/', verbose_name='Imagem Horizontal')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Data de Início')),
                ('end_date', models.DateField(verbose_name='Data de Término')),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('number_store', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Numero da Loja')),
                ('city', models.CharField(max_length=50, verbose_name='Nome da Loja')),
                ('slug_city', models.SlugField(blank=True, default='', unique=True)),
                ('adress', models.CharField(max_length=150, verbose_name='Endereço')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='WhatsApp')),
                ('text', models.TextField(blank=True, default='Estou interessado no produto: ', max_length=255, null=True, verbose_name='Mensagem WhatsApp')),
                ('store_manager', models.CharField(max_length=100, verbose_name='Gerente')),
                ('text_link', models.TextField(blank=True, default='', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Loja',
                'verbose_name_plural': 'Lojas',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, default=None, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_cities', models.ManyToManyField(blank=True, to='tabloide.store', verbose_name='Cidades Permitidas')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabloide.product')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabloide.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCombo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('multi', models.IntegerField(default=1, verbose_name='Quantidade')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combos_as_main', to='tabloide.product', verbose_name='Produto Principal')),
                ('related_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combos_as_related', to='tabloide.product', verbose_name='Produto Relacionado')),
            ],
            options={
                'verbose_name': 'Combo de Produto',
                'verbose_name_plural': 'Combos de Produtos',
                'unique_together': {('product', 'related_product')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='promotions',
            field=models.ManyToManyField(blank=True, default='', through='tabloide.ProductPromo', to='tabloide.promotion', verbose_name='Promoções'),
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, through='tabloide.ProductCombo', to='tabloide.product', verbose_name='Produtos Relacionados'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, default='', to='tabloide.tag'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CampaignClick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
                ('click_at_date', models.DateTimeField(auto_now_add=True)),
                ('price_at_click', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabloide.store')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabloide.product')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabloide.promotion')),
            ],
            options={
                'verbose_name': 'Contador de Acessos',
                'verbose_name_plural': 'Contadores de Acessos',
                'permissions': [('can_view_all_cities', 'Can view campaign clicks for all cities')],
                'indexes': [models.Index(fields=['promotion', 'click_at_date'], name='tabloide_ca_promoti_0c7cb0_idx'), models.Index(fields=['city'], name='tabloide_ca_city_id_fbac63_idx'), models.Index(fields=['product'], name='tabloide_ca_product_36434c_idx')],
            },
        ),
    ]
